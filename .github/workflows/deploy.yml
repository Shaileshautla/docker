name: Deploy Infrastructure

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Copy SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_PRIVATE_KEY }}" > ~/.ssh/test.pem
          chmod 600 ~/.ssh/test.pem

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible sshpass

      - name: Create Ansible Inventory
        run: |
          # Capture IP from Terraform output
          INSTANCE_IP=$(terraform -chdir=terraform output -raw ec2_public_ip)

          echo "📡 EC2 Public IP from Terraform: $INSTANCE_IP"

          if [ -z "$INSTANCE_IP" ]; then
            echo "❌ ERROR: No IP received from Terraform"
            exit 1
          fi

          # Create inventory.ini inside ansible-ec2-docker directory
          echo "[web]" > ansible-ec2-docker/inventory.ini
          echo "$INSTANCE_IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/test.pem" >> ansible-ec2-docker/inventory.ini

          echo "✅ Inventory file content:"
          cat ansible-ec2-docker/inventory.ini

      - name: Run Ansible Playbook
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ansible-ec2-docker/inventory.ini ansible-ec2-docker/install_docker.yml
